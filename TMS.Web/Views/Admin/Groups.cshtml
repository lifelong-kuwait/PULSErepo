@using lr = Resources.Resources
@{
    ViewBag.Title = lr.GroupsTitle;
}
<h2>@lr.GroupsTitle</h2>
@(Html.Kendo().Grid<TMS.Library.Common.Groups.SecurityGroups>().Name("SecurityGroups")
           .Columns(columns =>
             {
                 columns.Bound(p => p.PrimaryGroupName);
                 columns.Bound(p => p.SecondaryGroupName);
                 columns.Bound(e => e.CreatedBy).Width(190).MinScreenWidth(550).Title(lr.GridAddedBy).ClientTemplate(@"<div class='gridaddedby'>
#if(AddedByAlias!=null){#<span class='Addedby' >#:AddedByAlias#</span>#}#
<span class='date' >#=kendo.toString(CreatedDate,'" + DateFormatScript + @"')#</span>
<span class='time' >#=kendo.toString(CreatedDate,'" + TimeFormatScript + @"')#</span>
</div>");
             })
        .ToolBar(toolbar => toolbar.Template(@<text>
        <div class="toolbar">
            <a class="k-button tms-grid-add"><span class="tms-grid-icon mdi mdi-plus "></span></a>
            <a class="k-button tms-grid-edit"><span class="tms-grid-icon mdi mdi-pencil "></span></a>
            <a class="k-button tms-grid-destroy"><span class="tms-grid-icon mdi mdi-delete "></span></a>
            <a class="k-button tms-grid-detail"><span class="tms-grid-icon mdi mdi-open-in-new "></span></a>
        </div>
    </text>))
    .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_SecurityGroupTemplate").DisplayDeleteConfirmation(false))
    .Sortable().Scrollable().Filterable().Selectable(selectable => selectable.Mode(GridSelectionMode.Single))
    .Pageable(pager => pager.Refresh(true).Numeric(true).PreviousNext(true).PageSizes(true))
    .HtmlAttributes(new { style = "height:700px !important;" })
    .Events(e => e.Edit("UsersLoginGrid_onEdit").Save("UsersLoginGrid_onSave"))
    .DataSource(dataSource => dataSource.Ajax().PageSize(15).Model(model => model.Id(p => p.GroupId))
    .Create(update => update.Action("Groups_Create", "Admin"))
    .Read(read => read.Action("Groups_Read", "Admin").Data("withSearch"))
    .Update(update => update.Action("Groups_Update", "Admin"))
    .Destroy(update => update.Action("Groups_Destroy", "Admin"))
    .Events(events => events.Error("GeneralErrorHandler(\"SecurityGroups\")"))
    )
)
<script id="toolTipTemplate" type="text/x-kendo-template">

    <span class="grid-tooltip-icon groupdetail" dat-id="#=GroupId#" title="See the detail of #=PrimaryGroupName#"><i class="mdi mdi-open-in-new"></i></span>

    <span class="grid-tooltip-icon edit" dat-id="#=GroupId#" title="Edit #=GroupId#"><i class="mdi mdi-pencil"></i></span>

    <span class="grid-tooltip-icon delete" dat-id="#=GroupId#" title="Delete"><i class="mdi mdi-delete"></i></span>

</script>

<script>
  jQuery(function () {
        jQuery(".tms-grid-detail").live("mousedown", function (event) {
            var selectedRows = jQuery("#" + jQuery(this).parents('.k-grid')[0].id + " tr.k-state-selected");
            if (selectedRows.length == 1) {
                var grid = jQuery(this).parents('.k-grid').data("kendoGrid");
                var data = grid.dataItem(grid.select());
                if (data.GroupId == 1 || data.GroupId == 2) { } else {
                    var url = '@Url.Content("~/Admin/GroupDetail?GroupId=")' + data.GroupId;
                    window.open(url, '_blank');
                }
            }
      });
});
</script>
<script>
    jQuery(function () {
        var template = kendo.template(jQuery("#toolTipTemplate").html());
        //initialize tooltip to grid tbody with filter cells with given CSS class
        var tooltip = jQuery("#SecurityGroups tbody").kendoTooltip({
            position: "center",
            autoHide: false,
            filter: "td:nth-child(1)",
            showOn: "click",
            show: function (e) {
                //get current target row
                this.popup.element.addClass("tmstooltip");
                var currentRow = this.target().closest("tr");
                var grid = jQuery("#SecurityGroups").data("kendoGrid");
                //get current row dataItem
                var dataItem = grid.dataItem(currentRow);
                //pass the dataItem to the template
                var generatedTemplate = template(dataItem);
                //set the generated template to the content of the tooltip
                this.content.html(generatedTemplate);
            },
        }).data("kendoTooltip");
        jQuery(".groupdetail").live("mousedown", function (event) {
            let testvalueGroupId = jQuery(this).attr("dat-id");
            var url = '@Url.Content("~/Admin/GroupDetail?GroupId=")' + testvalueGroupId;
            window.open(url, '_blank');
        });
        jQuery(".edit").live("mousedown", function (event) {
            debugger; 
            jQuery("#SecurityGroups").data("kendoGrid").editRow(jQuery("[data-id=" + jQuery(this).attr("dat-id") + "]"));
        });
        jQuery(".delete").live("mousedown", function (event) {
           // debugger;
            grid = jQuery("#SecurityGroups").data("kendoGrid");
            var selectedRows = jQuery("#SecurityGroups tr.k-state-selected");
            var checkedLength = selectedRows.length;
            var checkedLength = selectedRows.length;
            if (checkedLength == 1) {
                var grid = jQuery("#SecurityGroups").data("kendoGrid");
                var data = grid.dataItem(jQuery("[data-id='" + jQuery(this).attr("dat-id") + "']"));  //get the row data so it can be referred later
                swal({
                    title: '@lr.Areyousureyouwanttodeletethisrecord',
                    text: '@lr.Youwillnotbeabletorecover',
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "@lr.confirmDelete",
                    cancelButtonText: "@lr.confirmNo",
                    closeOnConfirm: false,
                    closeOnCancel: true,
                    customClass: "tmsconfirm"
                },
                function (isConfirm) {
                    if (isConfirm) {
                        grid.removeRow(selectedRows);
                        swal({
                           title: '@lr.confirmDeleted',
                           text:  '@lr.confirmDeletedMessage',
                           type: "success"
                       },
                    function(){
                                      window.location="@Url.Content("~/Admin/Groups")";
                        });
                   }
                });
            } else if (checkedLength > 1) {
                var grid = jQuery("#SecurityGroups").data("kendoGrid");
                swal({
                    title: '@lr.Areyousureyouwanttodeletetheserecord',
                    text: '@lr.Youwillnotbeabletorecover' + ' <strong style="font-weight:bold">' + checkedLength + ' ' + '@lr.confirmRecords' + '</strong> ?',
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: "@lr.confirmDelete",
                    cancelButtonText: "@lr.confirmNo",
                    closeOnConfirm: false,
                    closeOnCancel: true,
                    html: true,
                    customClass: "tmsconfirm"
                },
              function (isConfirm) {
                  if (isConfirm) {
                      selectedRows.each(function () { grid.removeRow(jQuery(this)); });
                      swal({
                           title: '@lr.confirmDeleted',
                           text:  '@lr.confirmDeletedMessage',
                           type: "success"
                       },
                    function(){
                                      window.location="@Url.Content("~/Admin/Group")";
                        });
                   }
              });
            } else {
            }
        });
    });
    function UsersLoginGrid_onEdit(e) {
        debugger;
        
        //if current model is not new then remove the Name editor
        var title = jQuery(e.container).parent().find(".k-window-title");
        var update = jQuery(e.container).parent().find(".k-grid-update");
        var cancel = jQuery(e.container).parent().find(".k-grid-cancel");
        alert('hello world');
        //jQuery('<a class="k-button k-button-icontext k-grid-update custom" href="\\#"><span class="k-icon k-i-check"></span>Save & New</a>').insertBefore(".k-grid-update");
        @*jQuery(cancel).html('<span class="k-icon k-i-cancel"></span>' + lr.CencelRecordGeneralButton);
        if (e.model.isNew()) {
            jQuery("#DateOfBirth").data("kendoDatePicker").value(null);
            jQuery("#IsSendCreatePasswordEmail").prop('checked', true).change();
            jQuery('.myP').addClass('hide');
            LoginUserProfilePicture = null; LoginUserProfilePicture_aid = 0;
            jQuery("#fileupload").kendoUpload({
                multiple: false,
                async: {
                    saveUrl: '@Url.Content("~/Attachment/SaveOrganizationLogo")',
                    removeUrl: '@Url.Content("~/Attachment/RemoveOrganizationLogo")',
                    autoUpload: true
                },
                remove: LoginUserProfilePictureOnRemove,
                success: LoginUserProfilePictureSuccess,
                select: LoginUserProfilePictureSelect,
            });
            jQuery(title).text(lr.AddRecordGeneralTitle);
            jQuery(update).html('<span class="k-icon k-i-check"></span>' + lr.SaveRecordGeneralButton);
        } else {
            // edit
            jQuery("#InitialEmail").val(e.model.Email);
            jQuery("#ConfirmPassword").removeAttr("data-val-required");
            jQuery("#Password").removeAttr("data-val-required");
            jQuery('.CreatePasswordEmail').addClass('hide');
            //uploa
            LoginUser_parentFoldername = null; LoginUserProfileEdit_aid = 0;
            CurrentLoginUserId = e.model.UserID;
            jQuery("#fileupload").kendoUpload({
                multiple: false,
                async: {
                    saveUrl: '@Url.Content("~/Attachment/SaveOrganizationLogo")',
                    removeUrl: '@Url.Content("~/Attachment/RemoveOrganizationLogo")',
                    autoUpload: true
                },
                remove: LoginUserProfilePictureEditOnRemove,
                success: LoginUserProfilePictureEditOnSuccess,
                select: LoginUserProfilePictureSelect,
            });
            jQuery(title).text(lr.EditRecordGeneralTitle);
            jQuery(update).html('<span class="k-icon k-i-check"></span>' + lr.UpdateRecordGeneralButton);
        }*@
        //
    }
    function UsersLoginGrid_onSave(e) {
        debugger;

        jQuery(event.srcElement)
            .addClass("k-state-disabled")
            .bind("click", disable = function (e) { e.preventDefault(); return false; })

        this.dataSource.one("requestEnd", function () {
            jQuery("[data-role=window] .k-grid-update").off("click", disable).removeClass("k-state-disabled");
        });

    }
</script>