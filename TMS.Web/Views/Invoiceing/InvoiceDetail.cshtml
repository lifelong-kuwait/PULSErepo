
@{
    ViewBag.Title = "InvoiceDetail_Read";
    Layout = "~/Views/Shared/_LayoutDashboardNew.cshtml";
}

<h2>InvoiceDetail_Read</h2>

@using lr = Resources.Resources;
@{
    var Model = (TMS.Library.TMS.Invoice)ViewData["model"];
    ViewBag.Title = Model.Referance_Number;
    Layout = "~/Views/Shared/_LayoutDashboardNew.cshtml";
    var phonenubner = lr.PersonPhoneNumber;
    var personEmail = lr.PersonContactEmail;
    var gender = lr.Gender;
    List<TMS.Library.TMS.Invoice> modellist = new List<TMS.Library.TMS.Invoice>() { Model };
}
<script>
    //Class
    function SessionTemplate(data) {
        if (data !== null) {
            var SessionTemplate = kendo.template(jQuery("#SessionTemplate").html(), { useWithBlock: false });
            return SessionTemplate(data);
        }
        return '';
    }
</script>
@Html.AntiForgeryToken()
<div id="inforecords"></div>
@(Html.Kendo().Grid<TMS.Library.TMS.Invoice>(modellist)
                        .Name("PersonDetailGrid")
                        .Columns(columns =>
                        {
                            columns.Bound(e => e.Invoice_Number).Filterable(true).ClientTemplate(@"<div  class='person-box'>
<div class='person'>
    " +
                        @"<h3> <b>Invoice Number</b>:#:Invoice_Number#</h3>" +
                         @"# if (Referance_Number!=null) { #" +
                        @"<p> <b>Referance Number</b>: #:Referance_Number#</p> #}
    if(customer.Customer_PName!=null){#<p><b>Customer</b> :#:customer.Customer_PName#</p> #}
    if(users.P_DisplayName!=null){#<p><b>Created By</b> :#:users.P_DisplayName#</p> #}
   if(Organization.P_Name!=null){#<p><b>Organization</b> :#:Organization.P_Name#</p> #}#
</div>"
                   );
                            columns.Bound(e => e.customer.Customer_PName).Filterable(true).ClientTemplate(@"<div  class='person-box'>
<div class='person'>
    " +
                             @"<h3> <b>Invoice Sub Total</b>:#:Invoice_Amount#</h3>" +
                              @"# if (Tax_Value!=null) { #" +
                             @"<p> <b>Tax Value</b>: #:Tax_Value#</p> #}
    if(Discount_Value!=null){#<p><b>Discount Value</b>:#:Discount_Value#</p> #}
    if(Invoice_Gross_Total!=null){#<h2><p><b>Gross Total</b> :#:Invoice_Gross_Total#</p></h2> #}#

</div>"
                        );
                            columns.Bound(e => e.Tax_Type).Filterable(true).ClientTemplate(@"<div  class='person-box'>
<div class='person'>
    " +
                            @"<h5> <b>Tax Percentage</b>:#:Tax_Percentage#</h5>" +
                             @"# if (Discount!=null) { #" +
                            @"<p> <b>Discount %</b>: #:Discount#</p> #}
    if(Tax_Type!=null){#<p><b>Tax Type</b>:#:Tax_Type#</p> #}#

</div>"
                       );
                            columns.Bound(e => e.Is_Re_schedule).Filterable(true).ClientTemplate("#=SessionTemplate(data)#");
                        }).Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_PersonDetailTemplate").DisplayDeleteConfirmation(false))
                          .ToolBar(toolbar => toolbar.Template(@<text>@RenderAddTemplate() </text>))
                                                                                          .DataSource(dataSource => dataSource
                                                      .Ajax().Model(model => { model.Id(m => m.ID); })
                                                      .Read(read => read.Action("Person_Read", "People"))
                                                         .Events(e => e.Error("GeneralErrorHandler(\"PersonDetailGrid1\")")))
                                                      .NoRecords(lr.GridNoRecordFoundMessage)
)
@helper RenderAddTemplate()
{
    <div class="toolbar">

        @if (User.IsInRole("CanDeletePerson"))
        {
            <a class="k-button tms-grid-added" title="" data-placement="left" data-toggle="tooltip" data-original-title="Tooltip on left">
                <span class="tms-grid-icon mdi mdi-plus "></span>
            </a>
            <a class="k-button tms-grid-Download download"><span class="tms-grid-icon mdi mdi-download "></span></a>
        }

    </div>
}
<script type="text/javascript">
    function onExpand(e) {
        jQuery('html, body').animate({
            scrollTop: e.item.offsetTop
        }, 1500);
    }
</script>
@(Html.Kendo().PanelBar()
                .Name("PersonDetailGridChildtemplate" + Model.ID)
            .ExpandMode(PanelBarExpandMode.Multiple)
            .Items(i =>
            {
                if (User.IsInRole("CanViewPersonEmail"))
                {
                    i.Add().Text("Invoice History").LoadContentFrom("InvoiceHistory", "Invoiceing", new { PersonID = Model.ID });
                }
                if (User.IsInRole("CanViewPersonPhone"))
                {
                    i.Add().Text("Invoice ReIssued").LoadContentFrom("InvoiceReIssued", "Invoiceing", new { PersonID = Model.ID });

                }
                if (User.IsInRole("CanViewPersonAddresses"))
                {
                    i.Add().Text(lr.AddressTabTitle).LoadContentFrom("PrimaryAddress", "Contact", new { PersonID = Model.ID });
                }
                if (User.IsInRole("CanViewPersonOnlinePresence"))
                {
                    i.Add().Text(lr.LinkTabTitle).LoadContentFrom("PersonLinks", "Contact", new { PersonID = Model.ID });
                }
                if (User.IsInRole("CanViewPersonEducation"))
                {
                    i.Add().Text(lr.PersonDegreeTabTitle).LoadContentFrom("Degree", "PersonEducation", new { PersonID = Model.ID });
                }
                if (User.IsInRole("CanViewPersonCertification"))
                {
                    i.Add().Text(lr.PersonCertificationTabTitle).LoadContentFrom("Certification", "PersonEducation", new { PersonID = Model.ID });
                }
                if (User.IsInRole("CanViewWorkExperience"))
                {
                    i.Add().Text(lr.PersonWorkExperienceTabTitle).LoadContentFrom("WorkExperience", "PersonEducation", new { PersonID = Model.ID });
                }
                if (User.IsInRole("CanViewPersonTrainingHistory"))
                {
                    i.Add().Text(lr.PersonTrainingDeliveredTabTitle).LoadContentFrom("TrainingDelivered", "PersonEducation", new { PersonID = Model.ID });
                }
                if (User.IsInRole("CanViewPersonSkillsAreasofFocus"))
                {
                    i.Add().Text(lr.PersonSkillAreasofFocusTabTitle).LoadContentFrom("PersonSkill", "SkillInterest", new { PersonID = Model.ID });
                }

                if (User.IsInRole("CanViewPersonAvailability"))
                {
                    i.Add().Text(lr.AvailabilityTabTitle).LoadContentFrom("PersonAvailability", "Contact", new { PersonID = Model.ID });
                }
                if (User.IsInRole("CanViewPersonRoles"))
                {
                    i.Add().Text(lr.RolesTabTitile).LoadContentFrom("ManageRoles", "People", new { PersonID = Model.ID });
                }
                if (User.IsInAnyRoles("CanViewPersonAchievement", "CanViewPersonSuggestedTraining", "CanViewPersonRelation", "CanViewPersonAttachments", "CanViewPersonNotes"))
                {
                    i.Add().Text(lr.OthersTabTitle).LoadContentFrom("Others", "People", new { pid = Model.ID });
                }

            }).Events(e => e.Expand("onExpand")))

 <script id="SessionTemplate" type="text/kendo">
        <div class='person-box'>
            <div class='person'>
                <h5 style="color:red;">
                    <p>
                        <label>
                            Due Date
                    </label>
                        <span>
                            #:data.Due_Date2#
                    </span>
                    </p>
                </h5>
                <p>
                    <label>Is Deposit: </label>
                    <label>
                        #if (data.Is_Deposit){# <span class="mdi mdi-checkbox-blank-circle text-success"></span>    #}else{#  <span class="mdi mdi-checkbox-blank-circle text-danger"></span>  #}#

                </label>
                </p>
                <p>
                    <label>Is Issued: </label>
                    <label>
                        #if (data.Is_Re_schedule){# <span class="mdi mdi-checkbox-blank-circle text-success"></span>    #}else{#  <span class="mdi mdi-checkbox-blank-circle text-danger"></span>  #}#

                </label>
                </p>
            </div>
        </div>
</script>
<script src="~/Views/People/Person.js"></script>