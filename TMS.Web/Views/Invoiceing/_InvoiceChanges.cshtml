
@model string
@using lr = Resources.Resources;
@if (User.IsInRole("CanViewChangeHistoryInvoice"))
{
    <div class="ChildGrid">
        @(Html.Kendo().Grid<TMS.Library.Entities.Invoice.InvoiceChanges>()
                                                                    .Name("ChangesGrid")
                                                                      .Columns(columns =>
                                                                      {
                                                                          columns.Bound(e => e.Old_Sub_total);
                                                                          columns.Bound(e => e.Old_Tax_Value).Title(lr.OldTaxValue);
                                                                          columns.Bound(e => e.Old_Discount_Vlaue).Title(lr.OldDiscountValue);
                                                                          columns.Bound(e => e.Old_Net_Value).Title(lr.OldNetValue);
                                                                          columns.Bound(e => e.Old_Discount).Title(lr.OldDiscountPercontageValue);
                                                                          columns.Bound(e => e.Old_Tax_Type).Title(lr.OldTaxValue);
                                                                          columns.Bound(e => e.Old_Discount).Title(lr.OldDiscountValue);
                                                                          columns.Bound(e => e.Creator.P_DisplayName).ClientTemplate(@"<div class='gridaddedby'>
            <span class='Addedby' >#:Creator.P_DisplayName#</span>
            <span class='date' >#=kendo.toString(Created_Date,'" + DateFormatScript + @"')#</span>
            <span class='time' >#=kendo.toString(Created_Date,'" + TimeFormatScript + @"')#</span>
        </div>").Title(lr.GridUpdatedBy);

                                                                      }).Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("").DisplayDeleteConfirmation(false))
                                                                      .ToolBar(toolbar => toolbar.Template(@<text>@RenderAddTemplate() </text>))
                                                                            .Sortable().Selectable(selectable => selectable.Mode(GridSelectionMode.Multiple))
                                                                            .Pageable(pager => pager.Refresh(true))
                                                                            .Scrollable().Filterable().Events(e => e.Edit("Grid_onEdit").Save("General_onSave"))
                                                                            .HtmlAttributes(new { style = "height:350px;" }).DataSource(dataSource => dataSource.Ajax().Model(model => { model.Id(m => m.ID); }).PageSize(8)
                                                                            .Read(read => read.Action("InvoiceChanges_Read", "Invoiceing", new { PersonID = Model }))
                                                                         
                                                                            .Events(e => e.Error("GeneralErrorHandler(\"ChangesGrid\")").RequestEnd("GridRequestEndUpdate"))
                                                                            ).NoRecords(lr.GridNoRecordFoundMessage)
        )
    </div>

    @helper RenderAddTemplate()
    {

    }
   



}


