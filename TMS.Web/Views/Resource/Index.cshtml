@using lr = Resources.Resources
@{
    ViewBag.Title = lr.ResourcePageTitle;
    Layout = "~/Views/Shared/_LayoutDashboardNew.cshtml";

}
<style>
    a.k-button.k-button-icontext.k-grid-add {
        color: #fff;
    }
</style>
<h2>Resource</h2>
@if (User.IsInRole("CanViewResource"))
{
@(Html.Kendo().Grid<TMS.Library.Admin.TMSResource>()
                    .Name("ResourceIndexGrid")
                       .Columns(columns =>
                       {
                           columns.Bound(p => p.Name).Title(lr.ResourceName).Width(130);
                           columns.Bound(p => p.P_Value).Title(lr.PrimaryLanguageResource).Width(130);
                           columns.Bound(p => p.S_Value).Title(lr.SecondaryLanguageResource).Width(130);
                           //   columns.Bound(p => p.OrganizationName).Title(lr.OrganizationTitle).Width(130);
                           //columns.Bound(p => p.CreatedDate).Width(130).Format(KendoDateFormat).Title(lr.GridCreatedDate); ;
                           columns.Bound(p => p.P_FirstName).Width(130).Title(lr.GridUpdatedBy);
                           columns.Bound(p => p.UpdatedDate).Width(130).Title(lr.GridUpdatedDate); ;
                           columns.Command(c => c.Edit().Text(lr.GridEditText)).Hidden(!ViewBag.IsAdmin).Title(lr.GridEditColumnHeader).Width(90);

                       })
                     .ToolBar(toolbar => toolbar.Template(@<text>@RenderAddTemplate()</text>))
                                                  .Editable(editable => editable.Mode(GridEditMode.PopUp).TemplateName("_TMSAdminResourcesPopUp"))

                                  .Pageable()
                                  .Excel(excel => excel
                       .FileName("Organization_Resource.xlsx")
                       .AllPages(true)
                       .ProxyURL(Url.Action("Excel_Export_Save", "Grid"))
                   )
                                   .Sortable()
                                   .Scrollable().Filterable()
                                       .HtmlAttributes(new { @style = "height: 420px;" })
                                                      .Events(e => e.Edit("Grid_onEdit").Save("General_onSave"))
                                    .DataSource(dataSource => dataSource
                                         .Ajax()
                                       .PageSize(10)
                                            .Model(model => model.Id(p => p.P_Resourceid))
                                       .Create(update => update.Action("Resource_Create", "Resource"))
                                       .Read(read => read.Action("Resource_Read", "Resource").Data("withSearch"))
                                           .Update(update => update.Action("Resource_Update", "Resource"))
                                                          .Events(events => events.Error("GeneralErrorHandler(\"ResourceIndexGrid\")"))
                                  )
)
@helper RenderAddTemplate()
{
    <div class="toolbar">
        @if (CurrentUser.CompanyID == -2)
        {
            <a class="k-button tms-grid-add"><span class="tms-grid-icon mdi mdi-plus "></span></a>
        }
        <a class="k-button k-button-icontext k-grid-excel"><span class="tms-grid-icon mdi mdi-file-excel"></span></a>
    </div>
}
<script type="text/javascript">
    jQuery(function () {
        var exportFlag = false;
        jQuery("#ResourceIndexGrid").data("kendoGrid").bind("excelExport", function (e) {

            if (!exportFlag) {
                e.sender.hideColumn(3);
                e.sender.hideColumn(4);
                e.preventDefault();
                exportFlag = true;
                setTimeout(function () {
                    e.sender.saveAsExcel();
                });


            } else {
                e.sender.hideColumn(3);
                e.sender.hideColumn(4);

                exportFlag = false;
            }

        });
        jQuery("#ResourceIndexGrid .k-grid-excel").live("mousedown", function (event) {
            setTimeout(function () { window.location.reload() }, 10000);
        });
    });
</script>
}