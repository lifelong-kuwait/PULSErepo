
@using lr = Resources.Resources;
@model TMS.Library.Users.ChangeUserPasswordModel
@{
    ViewBag.Title = "ResetUserPassword";
    Layout = "~/Views/Shared/_LayoutDashboardNew.cshtml";
}
@*<form id="UpdatePassword" method="post" autocomplete="off">
        @Html.HiddenFor(x => x.uid)
        @Html.HiddenFor(x => x.ts)
        @Html.AntiForgeryToken()
        <div class="inputwrapper login-alert">

            @if (ViewContext.ViewData.ModelState.Where(x => x.Key == "").Any())
            {
                @Html.ValidationSummary(true, null, new { @class = "alert alert-error" })
            }
        </div>
        <div class="inputwrapper animate1 bounceIn">
            @Html.PasswordFor(x => x.Password, new { @placeholder = lr.UserPassword })
        </div>
        <div class="inputwrapper animate2 bounceIn">
            @Html.PasswordFor(x => x.ConfirmPassword, new { @placeholder = lr.UserConfirmPassword })
        </div>
        <div class="inputwrapper animate3 bounceIn">
            <button id="submit" type="submit">@lr.UserChangePassword</button>
        </div>
    </form>*@



<style>
    div#calender {
        width: 1082px;
    }

    .fc-content {
        color: #000;
    }

    td.fc-day.fc-widget-content.fc-sun.fc-today.fc-state-highlight {
        background-color: #80BFC8;
    }

    .right-inner-addon {
        display: none;
    }

    .fc button .fc-icon {
        position: relative;
        top: -.05em;
        margin: 0 .2em;
        /* vertical-align: middle; */
    }

    span.fc-time {
        display: none;
    }
</style>


<style>
    .form-group {
        display: grid;
    }

    .input-group {
        display: none;
    }

    .col-md-12.col-lg-offset-2 {
        margin-bottom: 26px;
    }
    /*li {
        display: none;
    }*/
</style>
@*<div class="col-md-offset-2">*@
<div class="row" style="margin-left:40%;">
    <div class="form-group">
        <h2>Reset User Password</h2>
    </div>
</div>
@Html.AntiForgeryToken()
<div class="inputwrapper login-alert">

    @if (ViewContext.ViewData.ModelState.Where(x => x.Key == "").Any())
    {
        @Html.ValidationSummary(true, null, new { @class = "alert alert-error" })
    }
</div>
<div class="form-group" style="margin-left:10%;">
    <div class="form-group">
        <div class="row" style="margin-top:1%;">
            @Html.LabelFor(x => x.OldPassword, new { @class = "col-md-3 col-lg-2 control-label" })
            <div class="col-md-7 col-lg-7 col-sm-11">
                @(Html.Kendo().TextBoxFor(x => x.OldPassword)

                                                .HtmlAttributes(new { @class = "form-control ", @style = " width: 100%;", type = "password" })
                )

            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row" style="margin-top:1%;">
            @Html.LabelFor(x => x.NewPassword, new { @class = "col-md-3 col-lg-2 control-label" })
            <div class="col-md-7 col-lg-7 col-sm-11">
                @(Html.Kendo().TextBoxFor(x => x.NewPassword)

                                                        .HtmlAttributes(new { @class = "form-control ", @style = " width: 100%;", type = "password" })
                )

            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="row" style="margin-top:1%;">
            @Html.LabelFor(x => x.ConfirmPassword, new { @class = "col-md-3 col-lg-2 control-label" })
            <div class="col-md-7 col-lg-7 col-sm-11">
                @(Html.Kendo().TextBoxFor(x => x.ConfirmPassword)

                                                        .HtmlAttributes(new { @class = "form-control col-md-3 col-lg-2", @style = " width: 100%;", type = "password" })
                )

            </div>
        </div>
    </div>
    <div class="form-group col-md-2 col-lg-2 col-sm-2" style="margin-left:65%;margin-top:1%;">
        @(Html.Kendo().Button()
                                                                                                                                                                                                       .Name("H2")
                                                                                                                                                                                                       .HtmlAttributes(new { type = "button", @class = "btn btn-primary k-primary" })
                                                                                                                                                                                                       .Content("" + @lr.UserChangePassword + "")
        )
    </div>
</div>
<script type="text/javascript">
        jQuery(document).ready(function () {
            jQuery("#H2").live("click", function (event) {
                jQuery("#H2").attr("disabled", true);
                if (jQuery("#OldPassword").val().trim().length <= 0 || jQuery("#NewPassword").val().trim().length < 5 || jQuery("#ConfirmPassword").val().trim().length < 5) {
                    swal({
                        title: '@lr.SomeFieldsAreEmpty',
                        text: '@lr.SomeFieldsAreEmptyOrNewPasswordMustBeGreater',
                        type: "warning",
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "@lr.ButtonOk",
                        closeOnConfirm: true,
                        customClass: "tmsconfirm"
                    });
                }
                else if (jQuery("#NewPassword").val() != jQuery("#ConfirmPassword").val()) {
                    swal({
                        title: '@lr.NewPasswordDoesnotMatch',
                        text: '@lr.NewPasswordDoesnotMatchExplain',
                        type: "warning",
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "@lr.ButtonOk",
                        closeOnConfirm: true,
                        customClass: "tmsconfirm"
                    });
                } else {
                    jQuery.ajax({
                        method: "post",
                        url: "/User/UserPasswordVerify",
                        dataType: "JSON",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify({ _password: jQuery("#OldPassword").val() }),
                        success: function (msg) {
                            if (!msg) {
                                swal({
                                    title: '@lr.Oops',
                                    text: '@lr.LoginPasswordRequired',
                                    type: "error"
                                });

                            } else {
                                jQuery.ajax({
                                    method: "post",
                                    url: "/User/ResetPassword",
                                    dataType: "JSON",
                                    contentType: "application/json; charset=utf-8",
                                    data: JSON.stringify({ oldPassword: jQuery("#OldPassword").val(), newPassword: jQuery("#NewPassword").val(), confirmPassword: jQuery("#ConfirmPassword").val() }),
                                    success: function (msg) {
                                        if (!msg) {
                                            swal({
                                                title: '@lr.Oops',
                                                text: '@lr.ErrorServerError ',
                                                type: "error"
                                            });

                                        } else {
                                             swal({
                                                title: '@lr.LoginSignIn',
                                                text: '@lr.LoginSignIn',
                                                type: "success"
                                            });
                                            window.location.href = "@Url.Action("LogOut", "Home")";
                                        }
                                    }
                                });
                            }
                        }
                    });
                }
                jQuery("#H2").attr("disabled", false);
        });
    });
</script>